//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace PhoneAdminClient.ZpdService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthPacket", Namespace="http://schemas.datacontract.org/2004/07/zpd")]
    public partial class AuthPacket : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthTolkenField;
        
        private int OffsetField;
        
        private PhoneAdminClient.ZpdService.AuthTolkenTimeout TimeoutField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthTolken {
            get {
                return this.AuthTolkenField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthTolkenField, value) != true)) {
                    this.AuthTolkenField = value;
                    this.RaisePropertyChanged("AuthTolken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Offset {
            get {
                return this.OffsetField;
            }
            set {
                if ((this.OffsetField.Equals(value) != true)) {
                    this.OffsetField = value;
                    this.RaisePropertyChanged("Offset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PhoneAdminClient.ZpdService.AuthTolkenTimeout Timeout {
            get {
                return this.TimeoutField;
            }
            set {
                if ((this.TimeoutField.Equals(value) != true)) {
                    this.TimeoutField = value;
                    this.RaisePropertyChanged("Timeout");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthTolkenTimeout", Namespace="http://schemas.datacontract.org/2004/07/zpd")]
    public enum AuthTolkenTimeout : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unset = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Any = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiveSeconds = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TenSecionds = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThirtySeconds = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoAuth = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZpdTrack", Namespace="http://schemas.datacontract.org/2004/07/zpd")]
    public partial class ZpdTrack : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AlbumField;
        
        private string ArtistField;
        
        private int DurationField;
        
        private int MediaIdField;
        
        private int MediaTypeIdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Album {
            get {
                return this.AlbumField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumField, value) != true)) {
                    this.AlbumField = value;
                    this.RaisePropertyChanged("Album");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaId {
            get {
                return this.MediaIdField;
            }
            set {
                if ((this.MediaIdField.Equals(value) != true)) {
                    this.MediaIdField = value;
                    this.RaisePropertyChanged("MediaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaTypeId {
            get {
                return this.MediaTypeIdField;
            }
            set {
                if ((this.MediaTypeIdField.Equals(value) != true)) {
                    this.MediaTypeIdField = value;
                    this.RaisePropertyChanged("MediaTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZpdCurrentPlayerState", Namespace="http://schemas.datacontract.org/2004/07/zpd")]
    public partial class ZpdCurrentPlayerState : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PhoneAdminClient.ZpdService.ZpdTrack CurrentTrackField;
        
        private float CurrentTrackPositionField;
        
        private bool IsPlayingField;
        
        private float VolumeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PhoneAdminClient.ZpdService.ZpdTrack CurrentTrack {
            get {
                return this.CurrentTrackField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentTrackField, value) != true)) {
                    this.CurrentTrackField = value;
                    this.RaisePropertyChanged("CurrentTrack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float CurrentTrackPosition {
            get {
                return this.CurrentTrackPositionField;
            }
            set {
                if ((this.CurrentTrackPositionField.Equals(value) != true)) {
                    this.CurrentTrackPositionField = value;
                    this.RaisePropertyChanged("CurrentTrackPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPlaying {
            get {
                return this.IsPlayingField;
            }
            set {
                if ((this.IsPlayingField.Equals(value) != true)) {
                    this.IsPlayingField = value;
                    this.RaisePropertyChanged("IsPlaying");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://zpd", ConfigurationName="ZpdService.IZPDService")]
    public interface IZPDService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/Play", ReplyAction="http://zpd/IZPDService/PlayResponse")]
        System.IAsyncResult BeginPlay(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState);
        
        void EndPlay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/PlaySongIndex", ReplyAction="http://zpd/IZPDService/PlaySongIndexResponse")]
        System.IAsyncResult BeginPlaySongIndex(PhoneAdminClient.ZpdService.AuthPacket authPacket, int index, System.AsyncCallback callback, object asyncState);
        
        void EndPlaySongIndex(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/Pause", ReplyAction="http://zpd/IZPDService/PauseResponse")]
        System.IAsyncResult BeginPause(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState);
        
        void EndPause(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/Stop", ReplyAction="http://zpd/IZPDService/StopResponse")]
        System.IAsyncResult BeginStop(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState);
        
        void EndStop(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/NextTrack", ReplyAction="http://zpd/IZPDService/NextTrackResponse")]
        System.IAsyncResult BeginNextTrack(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState);
        
        void EndNextTrack(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/PreviousTrack", ReplyAction="http://zpd/IZPDService/PreviousTrackResponse")]
        System.IAsyncResult BeginPreviousTrack(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState);
        
        void EndPreviousTrack(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/ToggleFastForward", ReplyAction="http://zpd/IZPDService/ToggleFastForwardResponse")]
        System.IAsyncResult BeginToggleFastForward(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState);
        
        void EndToggleFastForward(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/ToggleRewind", ReplyAction="http://zpd/IZPDService/ToggleRewindResponse")]
        System.IAsyncResult BeginToggleRewind(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState);
        
        void EndToggleRewind(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/ToggleShuffle", ReplyAction="http://zpd/IZPDService/ToggleShuffleResponse")]
        System.IAsyncResult BeginToggleShuffle(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState);
        
        void EndToggleShuffle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/ToggleRepeat", ReplyAction="http://zpd/IZPDService/ToggleRepeatResponse")]
        System.IAsyncResult BeginToggleRepeat(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState);
        
        void EndToggleRepeat(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/ReIndexLibrary", ReplyAction="http://zpd/IZPDService/ReIndexLibraryResponse")]
        System.IAsyncResult BeginReIndexLibrary(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState);
        
        void EndReIndexLibrary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/Search", ReplyAction="http://zpd/IZPDService/SearchResponse")]
        System.IAsyncResult BeginSearch(string searchTerm, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack> EndSearch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/QueueTrack", ReplyAction="http://zpd/IZPDService/QueueTrackResponse")]
        System.IAsyncResult BeginQueueTrack(int mediaId, int mediaTypeId, System.AsyncCallback callback, object asyncState);
        
        void EndQueueTrack(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/QueueTrackAtIndex", ReplyAction="http://zpd/IZPDService/QueueTrackAtIndexResponse")]
        System.IAsyncResult BeginQueueTrackAtIndex(PhoneAdminClient.ZpdService.AuthPacket authPacket, int mediaId, int mediaTypeId, int index, System.AsyncCallback callback, object asyncState);
        
        void EndQueueTrackAtIndex(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/RemoveTrackAtIndex", ReplyAction="http://zpd/IZPDService/RemoveTrackAtIndexResponse")]
        System.IAsyncResult BeginRemoveTrackAtIndex(PhoneAdminClient.ZpdService.AuthPacket authPacket, int index, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveTrackAtIndex(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/GetCurrentPlayerState", ReplyAction="http://zpd/IZPDService/GetCurrentPlayerStateResponse")]
        System.IAsyncResult BeginGetCurrentPlayerState(System.AsyncCallback callback, object asyncState);
        
        PhoneAdminClient.ZpdService.ZpdCurrentPlayerState EndGetCurrentPlayerState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/GetCurrentQueue", ReplyAction="http://zpd/IZPDService/GetCurrentQueueResponse")]
        System.IAsyncResult BeginGetCurrentQueue(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack> EndGetCurrentQueue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://zpd/IZPDService/ClosePlayer", ReplyAction="http://zpd/IZPDService/ClosePlayerResponse")]
        System.IAsyncResult BeginClosePlayer(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState);
        
        void EndClosePlayer(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IZPDServiceChannel : PhoneAdminClient.ZpdService.IZPDService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentPlayerStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentPlayerStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PhoneAdminClient.ZpdService.ZpdCurrentPlayerState Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PhoneAdminClient.ZpdService.ZpdCurrentPlayerState)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ZPDServiceClient : System.ServiceModel.ClientBase<PhoneAdminClient.ZpdService.IZPDService>, PhoneAdminClient.ZpdService.IZPDService {
        
        private BeginOperationDelegate onBeginPlayDelegate;
        
        private EndOperationDelegate onEndPlayDelegate;
        
        private System.Threading.SendOrPostCallback onPlayCompletedDelegate;
        
        private BeginOperationDelegate onBeginPlaySongIndexDelegate;
        
        private EndOperationDelegate onEndPlaySongIndexDelegate;
        
        private System.Threading.SendOrPostCallback onPlaySongIndexCompletedDelegate;
        
        private BeginOperationDelegate onBeginPauseDelegate;
        
        private EndOperationDelegate onEndPauseDelegate;
        
        private System.Threading.SendOrPostCallback onPauseCompletedDelegate;
        
        private BeginOperationDelegate onBeginStopDelegate;
        
        private EndOperationDelegate onEndStopDelegate;
        
        private System.Threading.SendOrPostCallback onStopCompletedDelegate;
        
        private BeginOperationDelegate onBeginNextTrackDelegate;
        
        private EndOperationDelegate onEndNextTrackDelegate;
        
        private System.Threading.SendOrPostCallback onNextTrackCompletedDelegate;
        
        private BeginOperationDelegate onBeginPreviousTrackDelegate;
        
        private EndOperationDelegate onEndPreviousTrackDelegate;
        
        private System.Threading.SendOrPostCallback onPreviousTrackCompletedDelegate;
        
        private BeginOperationDelegate onBeginToggleFastForwardDelegate;
        
        private EndOperationDelegate onEndToggleFastForwardDelegate;
        
        private System.Threading.SendOrPostCallback onToggleFastForwardCompletedDelegate;
        
        private BeginOperationDelegate onBeginToggleRewindDelegate;
        
        private EndOperationDelegate onEndToggleRewindDelegate;
        
        private System.Threading.SendOrPostCallback onToggleRewindCompletedDelegate;
        
        private BeginOperationDelegate onBeginToggleShuffleDelegate;
        
        private EndOperationDelegate onEndToggleShuffleDelegate;
        
        private System.Threading.SendOrPostCallback onToggleShuffleCompletedDelegate;
        
        private BeginOperationDelegate onBeginToggleRepeatDelegate;
        
        private EndOperationDelegate onEndToggleRepeatDelegate;
        
        private System.Threading.SendOrPostCallback onToggleRepeatCompletedDelegate;
        
        private BeginOperationDelegate onBeginReIndexLibraryDelegate;
        
        private EndOperationDelegate onEndReIndexLibraryDelegate;
        
        private System.Threading.SendOrPostCallback onReIndexLibraryCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchDelegate;
        
        private EndOperationDelegate onEndSearchDelegate;
        
        private System.Threading.SendOrPostCallback onSearchCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueueTrackDelegate;
        
        private EndOperationDelegate onEndQueueTrackDelegate;
        
        private System.Threading.SendOrPostCallback onQueueTrackCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueueTrackAtIndexDelegate;
        
        private EndOperationDelegate onEndQueueTrackAtIndexDelegate;
        
        private System.Threading.SendOrPostCallback onQueueTrackAtIndexCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveTrackAtIndexDelegate;
        
        private EndOperationDelegate onEndRemoveTrackAtIndexDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveTrackAtIndexCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentPlayerStateDelegate;
        
        private EndOperationDelegate onEndGetCurrentPlayerStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentPlayerStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentQueueDelegate;
        
        private EndOperationDelegate onEndGetCurrentQueueDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentQueueCompletedDelegate;
        
        private BeginOperationDelegate onBeginClosePlayerDelegate;
        
        private EndOperationDelegate onEndClosePlayerDelegate;
        
        private System.Threading.SendOrPostCallback onClosePlayerCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ZPDServiceClient() {
        }
        
        public ZPDServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ZPDServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZPDServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZPDServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PlayCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PlaySongIndexCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PauseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StopCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> NextTrackCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PreviousTrackCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ToggleFastForwardCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ToggleRewindCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ToggleShuffleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ToggleRepeatCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReIndexLibraryCompleted;
        
        public event System.EventHandler<SearchCompletedEventArgs> SearchCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> QueueTrackCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> QueueTrackAtIndexCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveTrackAtIndexCompleted;
        
        public event System.EventHandler<GetCurrentPlayerStateCompletedEventArgs> GetCurrentPlayerStateCompleted;
        
        public event System.EventHandler<GetCurrentQueueCompletedEventArgs> GetCurrentQueueCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ClosePlayerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginPlay(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPlay(authPacket, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndPlay(System.IAsyncResult result) {
            base.Channel.EndPlay(result);
        }
        
        private System.IAsyncResult OnBeginPlay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginPlay(authPacket, callback, asyncState);
        }
        
        private object[] OnEndPlay(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndPlay(result);
            return null;
        }
        
        private void OnPlayCompleted(object state) {
            if ((this.PlayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PlayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PlayAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket) {
            this.PlayAsync(authPacket, null);
        }
        
        public void PlayAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, object userState) {
            if ((this.onBeginPlayDelegate == null)) {
                this.onBeginPlayDelegate = new BeginOperationDelegate(this.OnBeginPlay);
            }
            if ((this.onEndPlayDelegate == null)) {
                this.onEndPlayDelegate = new EndOperationDelegate(this.OnEndPlay);
            }
            if ((this.onPlayCompletedDelegate == null)) {
                this.onPlayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPlayCompleted);
            }
            base.InvokeAsync(this.onBeginPlayDelegate, new object[] {
                        authPacket}, this.onEndPlayDelegate, this.onPlayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginPlaySongIndex(PhoneAdminClient.ZpdService.AuthPacket authPacket, int index, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPlaySongIndex(authPacket, index, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndPlaySongIndex(System.IAsyncResult result) {
            base.Channel.EndPlaySongIndex(result);
        }
        
        private System.IAsyncResult OnBeginPlaySongIndex(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            int index = ((int)(inValues[1]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginPlaySongIndex(authPacket, index, callback, asyncState);
        }
        
        private object[] OnEndPlaySongIndex(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndPlaySongIndex(result);
            return null;
        }
        
        private void OnPlaySongIndexCompleted(object state) {
            if ((this.PlaySongIndexCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PlaySongIndexCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PlaySongIndexAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, int index) {
            this.PlaySongIndexAsync(authPacket, index, null);
        }
        
        public void PlaySongIndexAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, int index, object userState) {
            if ((this.onBeginPlaySongIndexDelegate == null)) {
                this.onBeginPlaySongIndexDelegate = new BeginOperationDelegate(this.OnBeginPlaySongIndex);
            }
            if ((this.onEndPlaySongIndexDelegate == null)) {
                this.onEndPlaySongIndexDelegate = new EndOperationDelegate(this.OnEndPlaySongIndex);
            }
            if ((this.onPlaySongIndexCompletedDelegate == null)) {
                this.onPlaySongIndexCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPlaySongIndexCompleted);
            }
            base.InvokeAsync(this.onBeginPlaySongIndexDelegate, new object[] {
                        authPacket,
                        index}, this.onEndPlaySongIndexDelegate, this.onPlaySongIndexCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginPause(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPause(authPacket, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndPause(System.IAsyncResult result) {
            base.Channel.EndPause(result);
        }
        
        private System.IAsyncResult OnBeginPause(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginPause(authPacket, callback, asyncState);
        }
        
        private object[] OnEndPause(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndPause(result);
            return null;
        }
        
        private void OnPauseCompleted(object state) {
            if ((this.PauseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PauseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PauseAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket) {
            this.PauseAsync(authPacket, null);
        }
        
        public void PauseAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, object userState) {
            if ((this.onBeginPauseDelegate == null)) {
                this.onBeginPauseDelegate = new BeginOperationDelegate(this.OnBeginPause);
            }
            if ((this.onEndPauseDelegate == null)) {
                this.onEndPauseDelegate = new EndOperationDelegate(this.OnEndPause);
            }
            if ((this.onPauseCompletedDelegate == null)) {
                this.onPauseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPauseCompleted);
            }
            base.InvokeAsync(this.onBeginPauseDelegate, new object[] {
                        authPacket}, this.onEndPauseDelegate, this.onPauseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginStop(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStop(authPacket, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndStop(System.IAsyncResult result) {
            base.Channel.EndStop(result);
        }
        
        private System.IAsyncResult OnBeginStop(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginStop(authPacket, callback, asyncState);
        }
        
        private object[] OnEndStop(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndStop(result);
            return null;
        }
        
        private void OnStopCompleted(object state) {
            if ((this.StopCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StopCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StopAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket) {
            this.StopAsync(authPacket, null);
        }
        
        public void StopAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, object userState) {
            if ((this.onBeginStopDelegate == null)) {
                this.onBeginStopDelegate = new BeginOperationDelegate(this.OnBeginStop);
            }
            if ((this.onEndStopDelegate == null)) {
                this.onEndStopDelegate = new EndOperationDelegate(this.OnEndStop);
            }
            if ((this.onStopCompletedDelegate == null)) {
                this.onStopCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStopCompleted);
            }
            base.InvokeAsync(this.onBeginStopDelegate, new object[] {
                        authPacket}, this.onEndStopDelegate, this.onStopCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginNextTrack(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNextTrack(authPacket, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndNextTrack(System.IAsyncResult result) {
            base.Channel.EndNextTrack(result);
        }
        
        private System.IAsyncResult OnBeginNextTrack(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginNextTrack(authPacket, callback, asyncState);
        }
        
        private object[] OnEndNextTrack(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndNextTrack(result);
            return null;
        }
        
        private void OnNextTrackCompleted(object state) {
            if ((this.NextTrackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NextTrackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NextTrackAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket) {
            this.NextTrackAsync(authPacket, null);
        }
        
        public void NextTrackAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, object userState) {
            if ((this.onBeginNextTrackDelegate == null)) {
                this.onBeginNextTrackDelegate = new BeginOperationDelegate(this.OnBeginNextTrack);
            }
            if ((this.onEndNextTrackDelegate == null)) {
                this.onEndNextTrackDelegate = new EndOperationDelegate(this.OnEndNextTrack);
            }
            if ((this.onNextTrackCompletedDelegate == null)) {
                this.onNextTrackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNextTrackCompleted);
            }
            base.InvokeAsync(this.onBeginNextTrackDelegate, new object[] {
                        authPacket}, this.onEndNextTrackDelegate, this.onNextTrackCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginPreviousTrack(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPreviousTrack(authPacket, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndPreviousTrack(System.IAsyncResult result) {
            base.Channel.EndPreviousTrack(result);
        }
        
        private System.IAsyncResult OnBeginPreviousTrack(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginPreviousTrack(authPacket, callback, asyncState);
        }
        
        private object[] OnEndPreviousTrack(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndPreviousTrack(result);
            return null;
        }
        
        private void OnPreviousTrackCompleted(object state) {
            if ((this.PreviousTrackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PreviousTrackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PreviousTrackAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket) {
            this.PreviousTrackAsync(authPacket, null);
        }
        
        public void PreviousTrackAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, object userState) {
            if ((this.onBeginPreviousTrackDelegate == null)) {
                this.onBeginPreviousTrackDelegate = new BeginOperationDelegate(this.OnBeginPreviousTrack);
            }
            if ((this.onEndPreviousTrackDelegate == null)) {
                this.onEndPreviousTrackDelegate = new EndOperationDelegate(this.OnEndPreviousTrack);
            }
            if ((this.onPreviousTrackCompletedDelegate == null)) {
                this.onPreviousTrackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPreviousTrackCompleted);
            }
            base.InvokeAsync(this.onBeginPreviousTrackDelegate, new object[] {
                        authPacket}, this.onEndPreviousTrackDelegate, this.onPreviousTrackCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginToggleFastForward(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginToggleFastForward(authPacket, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndToggleFastForward(System.IAsyncResult result) {
            base.Channel.EndToggleFastForward(result);
        }
        
        private System.IAsyncResult OnBeginToggleFastForward(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginToggleFastForward(authPacket, callback, asyncState);
        }
        
        private object[] OnEndToggleFastForward(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndToggleFastForward(result);
            return null;
        }
        
        private void OnToggleFastForwardCompleted(object state) {
            if ((this.ToggleFastForwardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ToggleFastForwardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ToggleFastForwardAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket) {
            this.ToggleFastForwardAsync(authPacket, null);
        }
        
        public void ToggleFastForwardAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, object userState) {
            if ((this.onBeginToggleFastForwardDelegate == null)) {
                this.onBeginToggleFastForwardDelegate = new BeginOperationDelegate(this.OnBeginToggleFastForward);
            }
            if ((this.onEndToggleFastForwardDelegate == null)) {
                this.onEndToggleFastForwardDelegate = new EndOperationDelegate(this.OnEndToggleFastForward);
            }
            if ((this.onToggleFastForwardCompletedDelegate == null)) {
                this.onToggleFastForwardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnToggleFastForwardCompleted);
            }
            base.InvokeAsync(this.onBeginToggleFastForwardDelegate, new object[] {
                        authPacket}, this.onEndToggleFastForwardDelegate, this.onToggleFastForwardCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginToggleRewind(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginToggleRewind(authPacket, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndToggleRewind(System.IAsyncResult result) {
            base.Channel.EndToggleRewind(result);
        }
        
        private System.IAsyncResult OnBeginToggleRewind(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginToggleRewind(authPacket, callback, asyncState);
        }
        
        private object[] OnEndToggleRewind(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndToggleRewind(result);
            return null;
        }
        
        private void OnToggleRewindCompleted(object state) {
            if ((this.ToggleRewindCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ToggleRewindCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ToggleRewindAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket) {
            this.ToggleRewindAsync(authPacket, null);
        }
        
        public void ToggleRewindAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, object userState) {
            if ((this.onBeginToggleRewindDelegate == null)) {
                this.onBeginToggleRewindDelegate = new BeginOperationDelegate(this.OnBeginToggleRewind);
            }
            if ((this.onEndToggleRewindDelegate == null)) {
                this.onEndToggleRewindDelegate = new EndOperationDelegate(this.OnEndToggleRewind);
            }
            if ((this.onToggleRewindCompletedDelegate == null)) {
                this.onToggleRewindCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnToggleRewindCompleted);
            }
            base.InvokeAsync(this.onBeginToggleRewindDelegate, new object[] {
                        authPacket}, this.onEndToggleRewindDelegate, this.onToggleRewindCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginToggleShuffle(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginToggleShuffle(authPacket, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndToggleShuffle(System.IAsyncResult result) {
            base.Channel.EndToggleShuffle(result);
        }
        
        private System.IAsyncResult OnBeginToggleShuffle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginToggleShuffle(authPacket, callback, asyncState);
        }
        
        private object[] OnEndToggleShuffle(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndToggleShuffle(result);
            return null;
        }
        
        private void OnToggleShuffleCompleted(object state) {
            if ((this.ToggleShuffleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ToggleShuffleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ToggleShuffleAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket) {
            this.ToggleShuffleAsync(authPacket, null);
        }
        
        public void ToggleShuffleAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, object userState) {
            if ((this.onBeginToggleShuffleDelegate == null)) {
                this.onBeginToggleShuffleDelegate = new BeginOperationDelegate(this.OnBeginToggleShuffle);
            }
            if ((this.onEndToggleShuffleDelegate == null)) {
                this.onEndToggleShuffleDelegate = new EndOperationDelegate(this.OnEndToggleShuffle);
            }
            if ((this.onToggleShuffleCompletedDelegate == null)) {
                this.onToggleShuffleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnToggleShuffleCompleted);
            }
            base.InvokeAsync(this.onBeginToggleShuffleDelegate, new object[] {
                        authPacket}, this.onEndToggleShuffleDelegate, this.onToggleShuffleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginToggleRepeat(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginToggleRepeat(authPacket, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndToggleRepeat(System.IAsyncResult result) {
            base.Channel.EndToggleRepeat(result);
        }
        
        private System.IAsyncResult OnBeginToggleRepeat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginToggleRepeat(authPacket, callback, asyncState);
        }
        
        private object[] OnEndToggleRepeat(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndToggleRepeat(result);
            return null;
        }
        
        private void OnToggleRepeatCompleted(object state) {
            if ((this.ToggleRepeatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ToggleRepeatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ToggleRepeatAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket) {
            this.ToggleRepeatAsync(authPacket, null);
        }
        
        public void ToggleRepeatAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, object userState) {
            if ((this.onBeginToggleRepeatDelegate == null)) {
                this.onBeginToggleRepeatDelegate = new BeginOperationDelegate(this.OnBeginToggleRepeat);
            }
            if ((this.onEndToggleRepeatDelegate == null)) {
                this.onEndToggleRepeatDelegate = new EndOperationDelegate(this.OnEndToggleRepeat);
            }
            if ((this.onToggleRepeatCompletedDelegate == null)) {
                this.onToggleRepeatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnToggleRepeatCompleted);
            }
            base.InvokeAsync(this.onBeginToggleRepeatDelegate, new object[] {
                        authPacket}, this.onEndToggleRepeatDelegate, this.onToggleRepeatCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginReIndexLibrary(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReIndexLibrary(authPacket, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndReIndexLibrary(System.IAsyncResult result) {
            base.Channel.EndReIndexLibrary(result);
        }
        
        private System.IAsyncResult OnBeginReIndexLibrary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginReIndexLibrary(authPacket, callback, asyncState);
        }
        
        private object[] OnEndReIndexLibrary(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndReIndexLibrary(result);
            return null;
        }
        
        private void OnReIndexLibraryCompleted(object state) {
            if ((this.ReIndexLibraryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReIndexLibraryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReIndexLibraryAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket) {
            this.ReIndexLibraryAsync(authPacket, null);
        }
        
        public void ReIndexLibraryAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, object userState) {
            if ((this.onBeginReIndexLibraryDelegate == null)) {
                this.onBeginReIndexLibraryDelegate = new BeginOperationDelegate(this.OnBeginReIndexLibrary);
            }
            if ((this.onEndReIndexLibraryDelegate == null)) {
                this.onEndReIndexLibraryDelegate = new EndOperationDelegate(this.OnEndReIndexLibrary);
            }
            if ((this.onReIndexLibraryCompletedDelegate == null)) {
                this.onReIndexLibraryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReIndexLibraryCompleted);
            }
            base.InvokeAsync(this.onBeginReIndexLibraryDelegate, new object[] {
                        authPacket}, this.onEndReIndexLibraryDelegate, this.onReIndexLibraryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginSearch(string searchTerm, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearch(searchTerm, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack> PhoneAdminClient.ZpdService.IZPDService.EndSearch(System.IAsyncResult result) {
            return base.Channel.EndSearch(result);
        }
        
        private System.IAsyncResult OnBeginSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string searchTerm = ((string)(inValues[0]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginSearch(searchTerm, callback, asyncState);
        }
        
        private object[] OnEndSearch(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack> retVal = ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchCompleted(object state) {
            if ((this.SearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchCompleted(this, new SearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchAsync(string searchTerm) {
            this.SearchAsync(searchTerm, null);
        }
        
        public void SearchAsync(string searchTerm, object userState) {
            if ((this.onBeginSearchDelegate == null)) {
                this.onBeginSearchDelegate = new BeginOperationDelegate(this.OnBeginSearch);
            }
            if ((this.onEndSearchDelegate == null)) {
                this.onEndSearchDelegate = new EndOperationDelegate(this.OnEndSearch);
            }
            if ((this.onSearchCompletedDelegate == null)) {
                this.onSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchCompleted);
            }
            base.InvokeAsync(this.onBeginSearchDelegate, new object[] {
                        searchTerm}, this.onEndSearchDelegate, this.onSearchCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginQueueTrack(int mediaId, int mediaTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueueTrack(mediaId, mediaTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndQueueTrack(System.IAsyncResult result) {
            base.Channel.EndQueueTrack(result);
        }
        
        private System.IAsyncResult OnBeginQueueTrack(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int mediaId = ((int)(inValues[0]));
            int mediaTypeId = ((int)(inValues[1]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginQueueTrack(mediaId, mediaTypeId, callback, asyncState);
        }
        
        private object[] OnEndQueueTrack(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndQueueTrack(result);
            return null;
        }
        
        private void OnQueueTrackCompleted(object state) {
            if ((this.QueueTrackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueueTrackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueueTrackAsync(int mediaId, int mediaTypeId) {
            this.QueueTrackAsync(mediaId, mediaTypeId, null);
        }
        
        public void QueueTrackAsync(int mediaId, int mediaTypeId, object userState) {
            if ((this.onBeginQueueTrackDelegate == null)) {
                this.onBeginQueueTrackDelegate = new BeginOperationDelegate(this.OnBeginQueueTrack);
            }
            if ((this.onEndQueueTrackDelegate == null)) {
                this.onEndQueueTrackDelegate = new EndOperationDelegate(this.OnEndQueueTrack);
            }
            if ((this.onQueueTrackCompletedDelegate == null)) {
                this.onQueueTrackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueueTrackCompleted);
            }
            base.InvokeAsync(this.onBeginQueueTrackDelegate, new object[] {
                        mediaId,
                        mediaTypeId}, this.onEndQueueTrackDelegate, this.onQueueTrackCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginQueueTrackAtIndex(PhoneAdminClient.ZpdService.AuthPacket authPacket, int mediaId, int mediaTypeId, int index, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueueTrackAtIndex(authPacket, mediaId, mediaTypeId, index, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndQueueTrackAtIndex(System.IAsyncResult result) {
            base.Channel.EndQueueTrackAtIndex(result);
        }
        
        private System.IAsyncResult OnBeginQueueTrackAtIndex(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            int mediaId = ((int)(inValues[1]));
            int mediaTypeId = ((int)(inValues[2]));
            int index = ((int)(inValues[3]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginQueueTrackAtIndex(authPacket, mediaId, mediaTypeId, index, callback, asyncState);
        }
        
        private object[] OnEndQueueTrackAtIndex(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndQueueTrackAtIndex(result);
            return null;
        }
        
        private void OnQueueTrackAtIndexCompleted(object state) {
            if ((this.QueueTrackAtIndexCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueueTrackAtIndexCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueueTrackAtIndexAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, int mediaId, int mediaTypeId, int index) {
            this.QueueTrackAtIndexAsync(authPacket, mediaId, mediaTypeId, index, null);
        }
        
        public void QueueTrackAtIndexAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, int mediaId, int mediaTypeId, int index, object userState) {
            if ((this.onBeginQueueTrackAtIndexDelegate == null)) {
                this.onBeginQueueTrackAtIndexDelegate = new BeginOperationDelegate(this.OnBeginQueueTrackAtIndex);
            }
            if ((this.onEndQueueTrackAtIndexDelegate == null)) {
                this.onEndQueueTrackAtIndexDelegate = new EndOperationDelegate(this.OnEndQueueTrackAtIndex);
            }
            if ((this.onQueueTrackAtIndexCompletedDelegate == null)) {
                this.onQueueTrackAtIndexCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueueTrackAtIndexCompleted);
            }
            base.InvokeAsync(this.onBeginQueueTrackAtIndexDelegate, new object[] {
                        authPacket,
                        mediaId,
                        mediaTypeId,
                        index}, this.onEndQueueTrackAtIndexDelegate, this.onQueueTrackAtIndexCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginRemoveTrackAtIndex(PhoneAdminClient.ZpdService.AuthPacket authPacket, int index, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveTrackAtIndex(authPacket, index, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndRemoveTrackAtIndex(System.IAsyncResult result) {
            base.Channel.EndRemoveTrackAtIndex(result);
        }
        
        private System.IAsyncResult OnBeginRemoveTrackAtIndex(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            int index = ((int)(inValues[1]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginRemoveTrackAtIndex(authPacket, index, callback, asyncState);
        }
        
        private object[] OnEndRemoveTrackAtIndex(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndRemoveTrackAtIndex(result);
            return null;
        }
        
        private void OnRemoveTrackAtIndexCompleted(object state) {
            if ((this.RemoveTrackAtIndexCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveTrackAtIndexCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveTrackAtIndexAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, int index) {
            this.RemoveTrackAtIndexAsync(authPacket, index, null);
        }
        
        public void RemoveTrackAtIndexAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, int index, object userState) {
            if ((this.onBeginRemoveTrackAtIndexDelegate == null)) {
                this.onBeginRemoveTrackAtIndexDelegate = new BeginOperationDelegate(this.OnBeginRemoveTrackAtIndex);
            }
            if ((this.onEndRemoveTrackAtIndexDelegate == null)) {
                this.onEndRemoveTrackAtIndexDelegate = new EndOperationDelegate(this.OnEndRemoveTrackAtIndex);
            }
            if ((this.onRemoveTrackAtIndexCompletedDelegate == null)) {
                this.onRemoveTrackAtIndexCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveTrackAtIndexCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveTrackAtIndexDelegate, new object[] {
                        authPacket,
                        index}, this.onEndRemoveTrackAtIndexDelegate, this.onRemoveTrackAtIndexCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginGetCurrentPlayerState(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentPlayerState(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PhoneAdminClient.ZpdService.ZpdCurrentPlayerState PhoneAdminClient.ZpdService.IZPDService.EndGetCurrentPlayerState(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentPlayerState(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentPlayerState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginGetCurrentPlayerState(callback, asyncState);
        }
        
        private object[] OnEndGetCurrentPlayerState(System.IAsyncResult result) {
            PhoneAdminClient.ZpdService.ZpdCurrentPlayerState retVal = ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndGetCurrentPlayerState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentPlayerStateCompleted(object state) {
            if ((this.GetCurrentPlayerStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentPlayerStateCompleted(this, new GetCurrentPlayerStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentPlayerStateAsync() {
            this.GetCurrentPlayerStateAsync(null);
        }
        
        public void GetCurrentPlayerStateAsync(object userState) {
            if ((this.onBeginGetCurrentPlayerStateDelegate == null)) {
                this.onBeginGetCurrentPlayerStateDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentPlayerState);
            }
            if ((this.onEndGetCurrentPlayerStateDelegate == null)) {
                this.onEndGetCurrentPlayerStateDelegate = new EndOperationDelegate(this.OnEndGetCurrentPlayerState);
            }
            if ((this.onGetCurrentPlayerStateCompletedDelegate == null)) {
                this.onGetCurrentPlayerStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentPlayerStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentPlayerStateDelegate, null, this.onEndGetCurrentPlayerStateDelegate, this.onGetCurrentPlayerStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginGetCurrentQueue(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentQueue(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack> PhoneAdminClient.ZpdService.IZPDService.EndGetCurrentQueue(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentQueue(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentQueue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginGetCurrentQueue(callback, asyncState);
        }
        
        private object[] OnEndGetCurrentQueue(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack> retVal = ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndGetCurrentQueue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentQueueCompleted(object state) {
            if ((this.GetCurrentQueueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentQueueCompleted(this, new GetCurrentQueueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentQueueAsync() {
            this.GetCurrentQueueAsync(null);
        }
        
        public void GetCurrentQueueAsync(object userState) {
            if ((this.onBeginGetCurrentQueueDelegate == null)) {
                this.onBeginGetCurrentQueueDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentQueue);
            }
            if ((this.onEndGetCurrentQueueDelegate == null)) {
                this.onEndGetCurrentQueueDelegate = new EndOperationDelegate(this.OnEndGetCurrentQueue);
            }
            if ((this.onGetCurrentQueueCompletedDelegate == null)) {
                this.onGetCurrentQueueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentQueueCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentQueueDelegate, null, this.onEndGetCurrentQueueDelegate, this.onGetCurrentQueueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneAdminClient.ZpdService.IZPDService.BeginClosePlayer(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClosePlayer(authPacket, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneAdminClient.ZpdService.IZPDService.EndClosePlayer(System.IAsyncResult result) {
            base.Channel.EndClosePlayer(result);
        }
        
        private System.IAsyncResult OnBeginClosePlayer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneAdminClient.ZpdService.AuthPacket authPacket = ((PhoneAdminClient.ZpdService.AuthPacket)(inValues[0]));
            return ((PhoneAdminClient.ZpdService.IZPDService)(this)).BeginClosePlayer(authPacket, callback, asyncState);
        }
        
        private object[] OnEndClosePlayer(System.IAsyncResult result) {
            ((PhoneAdminClient.ZpdService.IZPDService)(this)).EndClosePlayer(result);
            return null;
        }
        
        private void OnClosePlayerCompleted(object state) {
            if ((this.ClosePlayerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClosePlayerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClosePlayerAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket) {
            this.ClosePlayerAsync(authPacket, null);
        }
        
        public void ClosePlayerAsync(PhoneAdminClient.ZpdService.AuthPacket authPacket, object userState) {
            if ((this.onBeginClosePlayerDelegate == null)) {
                this.onBeginClosePlayerDelegate = new BeginOperationDelegate(this.OnBeginClosePlayer);
            }
            if ((this.onEndClosePlayerDelegate == null)) {
                this.onEndClosePlayerDelegate = new EndOperationDelegate(this.OnEndClosePlayer);
            }
            if ((this.onClosePlayerCompletedDelegate == null)) {
                this.onClosePlayerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClosePlayerCompleted);
            }
            base.InvokeAsync(this.onBeginClosePlayerDelegate, new object[] {
                        authPacket}, this.onEndClosePlayerDelegate, this.onClosePlayerCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override PhoneAdminClient.ZpdService.IZPDService CreateChannel() {
            return new ZPDServiceClientChannel(this);
        }
        
        private class ZPDServiceClientChannel : ChannelBase<PhoneAdminClient.ZpdService.IZPDService>, PhoneAdminClient.ZpdService.IZPDService {
            
            public ZPDServiceClientChannel(System.ServiceModel.ClientBase<PhoneAdminClient.ZpdService.IZPDService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginPlay(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = authPacket;
                System.IAsyncResult _result = base.BeginInvoke("Play", _args, callback, asyncState);
                return _result;
            }
            
            public void EndPlay(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Play", _args, result);
            }
            
            public System.IAsyncResult BeginPlaySongIndex(PhoneAdminClient.ZpdService.AuthPacket authPacket, int index, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = authPacket;
                _args[1] = index;
                System.IAsyncResult _result = base.BeginInvoke("PlaySongIndex", _args, callback, asyncState);
                return _result;
            }
            
            public void EndPlaySongIndex(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("PlaySongIndex", _args, result);
            }
            
            public System.IAsyncResult BeginPause(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = authPacket;
                System.IAsyncResult _result = base.BeginInvoke("Pause", _args, callback, asyncState);
                return _result;
            }
            
            public void EndPause(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Pause", _args, result);
            }
            
            public System.IAsyncResult BeginStop(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = authPacket;
                System.IAsyncResult _result = base.BeginInvoke("Stop", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStop(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Stop", _args, result);
            }
            
            public System.IAsyncResult BeginNextTrack(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = authPacket;
                System.IAsyncResult _result = base.BeginInvoke("NextTrack", _args, callback, asyncState);
                return _result;
            }
            
            public void EndNextTrack(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("NextTrack", _args, result);
            }
            
            public System.IAsyncResult BeginPreviousTrack(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = authPacket;
                System.IAsyncResult _result = base.BeginInvoke("PreviousTrack", _args, callback, asyncState);
                return _result;
            }
            
            public void EndPreviousTrack(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("PreviousTrack", _args, result);
            }
            
            public System.IAsyncResult BeginToggleFastForward(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = authPacket;
                System.IAsyncResult _result = base.BeginInvoke("ToggleFastForward", _args, callback, asyncState);
                return _result;
            }
            
            public void EndToggleFastForward(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ToggleFastForward", _args, result);
            }
            
            public System.IAsyncResult BeginToggleRewind(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = authPacket;
                System.IAsyncResult _result = base.BeginInvoke("ToggleRewind", _args, callback, asyncState);
                return _result;
            }
            
            public void EndToggleRewind(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ToggleRewind", _args, result);
            }
            
            public System.IAsyncResult BeginToggleShuffle(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = authPacket;
                System.IAsyncResult _result = base.BeginInvoke("ToggleShuffle", _args, callback, asyncState);
                return _result;
            }
            
            public void EndToggleShuffle(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ToggleShuffle", _args, result);
            }
            
            public System.IAsyncResult BeginToggleRepeat(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = authPacket;
                System.IAsyncResult _result = base.BeginInvoke("ToggleRepeat", _args, callback, asyncState);
                return _result;
            }
            
            public void EndToggleRepeat(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ToggleRepeat", _args, result);
            }
            
            public System.IAsyncResult BeginReIndexLibrary(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = authPacket;
                System.IAsyncResult _result = base.BeginInvoke("ReIndexLibrary", _args, callback, asyncState);
                return _result;
            }
            
            public void EndReIndexLibrary(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ReIndexLibrary", _args, result);
            }
            
            public System.IAsyncResult BeginSearch(string searchTerm, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = searchTerm;
                System.IAsyncResult _result = base.BeginInvoke("Search", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack> EndSearch(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack> _result = ((System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack>)(base.EndInvoke("Search", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginQueueTrack(int mediaId, int mediaTypeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = mediaId;
                _args[1] = mediaTypeId;
                System.IAsyncResult _result = base.BeginInvoke("QueueTrack", _args, callback, asyncState);
                return _result;
            }
            
            public void EndQueueTrack(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("QueueTrack", _args, result);
            }
            
            public System.IAsyncResult BeginQueueTrackAtIndex(PhoneAdminClient.ZpdService.AuthPacket authPacket, int mediaId, int mediaTypeId, int index, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = authPacket;
                _args[1] = mediaId;
                _args[2] = mediaTypeId;
                _args[3] = index;
                System.IAsyncResult _result = base.BeginInvoke("QueueTrackAtIndex", _args, callback, asyncState);
                return _result;
            }
            
            public void EndQueueTrackAtIndex(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("QueueTrackAtIndex", _args, result);
            }
            
            public System.IAsyncResult BeginRemoveTrackAtIndex(PhoneAdminClient.ZpdService.AuthPacket authPacket, int index, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = authPacket;
                _args[1] = index;
                System.IAsyncResult _result = base.BeginInvoke("RemoveTrackAtIndex", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemoveTrackAtIndex(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RemoveTrackAtIndex", _args, result);
            }
            
            public System.IAsyncResult BeginGetCurrentPlayerState(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCurrentPlayerState", _args, callback, asyncState);
                return _result;
            }
            
            public PhoneAdminClient.ZpdService.ZpdCurrentPlayerState EndGetCurrentPlayerState(System.IAsyncResult result) {
                object[] _args = new object[0];
                PhoneAdminClient.ZpdService.ZpdCurrentPlayerState _result = ((PhoneAdminClient.ZpdService.ZpdCurrentPlayerState)(base.EndInvoke("GetCurrentPlayerState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCurrentQueue(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCurrentQueue", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack> EndGetCurrentQueue(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack> _result = ((System.Collections.ObjectModel.ObservableCollection<PhoneAdminClient.ZpdService.ZpdTrack>)(base.EndInvoke("GetCurrentQueue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginClosePlayer(PhoneAdminClient.ZpdService.AuthPacket authPacket, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = authPacket;
                System.IAsyncResult _result = base.BeginInvoke("ClosePlayer", _args, callback, asyncState);
                return _result;
            }
            
            public void EndClosePlayer(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ClosePlayer", _args, result);
            }
        }
    }
}
